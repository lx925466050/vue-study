你了解哪些vue性能优化方法？

1.源码优化
1.v-if 和 v-show选择调用 
v-show和v-if的区别是：v-if是懒加载，当状态为true时才会加载，并且为false时不会占用布局空间
v-show是无论状态是true或者是false，都会进行渲染，并对布局占据空间对于在项目中，需要频繁调用，不需要权限的显示隐藏，
可以选择使用v-show，可以减少系统的切换开销。
2.为item设置唯一key值， 
在列表数据进行遍历渲染时，需要为每一项item设置唯一key值，方便vuejs内部机制精准找到该条列表数据。
当state更新时，新的状态值和旧的状态值对比，较快地定位到diff。
3.细分vuejs组件 
在项目开发过程之中，第一版本把所有的组件的布局写在一个组件中，当数据变更时，由于组件代码比较庞大
vuejs的数据驱动视图更新比较慢，造成渲染比较慢。造成比较差的体验效果。
所以把组件细分，比如一个组件，可以把整个组件细分成轮播组件、列表组件、分页组件等。
4.减少watch的数据 
当组件某个数据变更后需要对应的state进行变更，就需要对另外的组件进行state进行变更。
可以使用watch监听相应的数据变更并绑定事件。当watch的数据比较小，性能消耗不明显。
当数据变大，系统会出现卡顿，所以减少watch的数据。
5.内容类系统的图片资源按需加载 
对于内容类系统的图片按需加载，如果出现图片加载比较多，可以先使用v-lazy之类的懒加载库或者绑定鼠标的scroll事件，
滚动到可视区域先再对数据进行加载显示，减少系统加载的数据。
6.SSR
如果项目比较大，首屏无论怎么做优化，都出现闪屏或者一阵黑屏的情况。
可以考虑使用SSR(服务端渲染)。

2.框架优化
1.骨架屏加载 
骨架屏进行首屏在资源数据还没有加载完成时显示。
2.对路由组件进行懒加载 
设置路由懒加载，按需加载会加速首屏渲染。
